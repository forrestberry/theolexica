-- Table: language
CREATE TABLE language (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    language_name TEXT NOT NULL
);

-- Table: part_of_speech
CREATE TABLE part_of_speech (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    pos TEXT NOT NULL
);

-- Table: grammatical_gender
CREATE TABLE grammatical_gender (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    gender TEXT NOT NULL
);

-- Table: grammatical_number
CREATE TABLE grammatical_number (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    number TEXT NOT NULL
);

-- Table: grammatical_case
CREATE TABLE grammatical_case (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    g_case TEXT NOT NULL
);

-- Table: grammatical_mood
CREATE TABLE grammatical_mood (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    mood TEXT NOT NULL
);

-- Table: grammatical_tense
CREATE TABLE grammatical_tense (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tense TEXT NOT NULL
);

-- Table: grammatical_stem
CREATE TABLE grammatical_stem (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    stem TEXT NOT NULL
);
-- Table: grammatical_person
CREATE TABLE grammatical_person (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    person TEXT NOT NULL
);

-- Table: grammatical_voice
CREATE TABLE grammatical_voice (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    voice TEXT NOT NULL
);

-- Table: grammatical_state
CREATE TABLE grammatical_state (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    state TEXT NOT NULL
);

-- Table: details
CREATE TABLE details (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    part_of_speech_id INTEGER,
    gender_id INTEGER,
    number_id INTEGER,
    case_id INTEGER,
    mood_id INTEGER,
    tense_id INTEGER,
    stem_id INTEGER,
    person_id INTEGER,
    voice_id INTEGER,
    state_id INTEGER,
    transliteration TEXT,
    FOREIGN KEY (part_of_speech_id) REFERENCES part_of_speech(id),
    FOREIGN KEY (gender_id) REFERENCES grammatical_gender(id),
    FOREIGN KEY (number_id) REFERENCES grammatical_number(id),
    FOREIGN KEY (case_id) REFERENCES grammatical_case(id),
    FOREIGN KEY (mood_id) REFERENCES grammatical_mood(id),
    FOREIGN KEY (tense_id) REFERENCES grammatical_tense(id),
    FOREIGN KEY (person_id) REFERENCES grammatical_person(id),
    FOREIGN KEY (voice_id) REFERENCES grammatical_voice(id),
    FOREIGN KEY (state_id) REFERENCES grammatical_state(id)
    FOREIGN KEY (stem_id) REFERENCES grammatical_stem(id)
);

-- Table: entry
CREATE TABLE entry (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    entry_text TEXT NOT NULL,
    language_id INTEGER NOT NULL,
    details_id INTEGER,
    FOREIGN KEY (language_id) REFERENCES language(id),
    FOREIGN KEY (details_id) REFERENCES details(id)
);

-- Table: word_form
CREATE TABLE word_form (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    form TEXT NOT NULL,
    form_gloss TEXT,
    details_id INTEGER,
    FOREIGN KEY (details_id) REFERENCES details(id)
);

-- Table: root
CREATE TABLE root (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    root_text TEXT NOT NULL
);

-- Table: lesson
CREATE TABLE lesson (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    source TEXT NOT NULL,
    chapter TEXT
);

-- Table: relationship_type
CREATE TABLE relationship_type (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    relationship_type TEXT NOT NULL
);

-- Table: entry_form
CREATE TABLE entry_form (
    entry_id INTEGER,
    word_form_id INTEGER,
    PRIMARY KEY (entry_id, word_form_id),
    FOREIGN KEY (entry_id) REFERENCES entry(id),
    FOREIGN KEY (word_form_id) REFERENCES word_form(id)
);

-- Table: entry_lesson
CREATE TABLE entry_lesson (
    entry_id INTEGER,
    lesson_id INTEGER,
    PRIMARY KEY (entry_id, lesson_id),
    FOREIGN KEY (entry_id) REFERENCES entry(id),
    FOREIGN KEY (lesson_id) REFERENCES lesson(id)
);


-- Table: root_details
CREATE TABLE root_details (
    root_id INTEGER,
    details_id INTEGER,
    PRIMARY KEY (root_id, details_id),
    FOREIGN KEY (root_id) REFERENCES root(id),
    FOREIGN KEY (details_id) REFERENCES details(id)
);

-- Table: related_entry
CREATE TABLE related_entry (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    relationship_type_id INTEGER,
    entry_id_1 INTEGER,
    entry_id_2 INTEGER,
    FOREIGN KEY (relationship_type_id) REFERENCES relationship_type(id),
    FOREIGN KEY (entry_id_1) REFERENCES entry(id),
    FOREIGN KEY (entry_id_2) REFERENCES entry(id)
);

-- Table: word_form_lesson
CREATE TABLE word_form_lesson (
    word_form_id INTEGER,
    lesson_id INTEGER,
    PRIMARY KEY (word_form_id, lesson_id),
    FOREIGN KEY (word_form_id) REFERENCES word_form(id),
    FOREIGN KEY (lesson_id) REFERENCES lesson(id)
);

-- Table: english_gloss
CREATE TABLE english_gloss (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    entry_id INTEGER,
    gloss TEXT,
    FOREIGN KEY (entry_id) REFERENCES entry(id)
);
